[1mdiff --git a/evaluate.py b/evaluate.py[m
[1mindex f36d0b0..c4c369f 100644[m
[1m--- a/evaluate.py[m
[1m+++ b/evaluate.py[m
[36m@@ -2,11 +2,13 @@[m [mimport numpy as np[m
 import soundfile as sf[m
 import os[m
 [m
[32m+[m
 def snr(clean, enhanced):[m
     noise = clean - enhanced[m
     snr_value = 10 * np.log10(np.sum(clean**2) / np.sum(noise**2))[m
     return snr_value[m
 [m
[32m+[m
 def evaluate_file(clean_file, enhanced_file):[m
     clean, fs1 = sf.read(clean_file)[m
     enhanced, fs2 = sf.read(enhanced_file)[m
[36m@@ -23,12 +25,13 @@[m [mdef evaluate_file(clean_file, enhanced_file):[m
         # You can add PESQ, STOI, or other metrics if you have implementations[m
     }[m
 [m
[32m+[m
 def batch_evaluate(clean_dir, enhanced_dir):[m
     results = {}[m
     for filename in os.listdir(enhanced_dir):[m
         if filename.endswith(".wav"):[m
             enhanced_file = os.path.join(enhanced_dir, filename)[m
[31m-            sp_id = filename.split('_')[0] + ".wav"[m
[32m+[m[32m            sp_id = filename.split("_")[0] + ".wav"[m
             clean_file = os.path.join(clean_dir, sp_id)[m
 [m
             if os.path.isfile(clean_file):[m
[1mdiff --git a/gui/main_gui.py b/gui/main_gui.py[m
[1mindex 8ab34c5..610bc12 100644[m
[1m--- a/gui/main_gui.py[m
[1m+++ b/gui/main_gui.py[m
[36m@@ -2,14 +2,16 @@[m [mimport tkinter as tk[m
 from tkinter import filedialog, messagebox[m
 import os[m
 import sys[m
[31m-sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))[m
[32m+[m
[32m+[m[32msys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), "..")))[m
 [m
 from py_enhancement import specsub, logmmse, wiener, subspace, gmm_snr[m
 from py_enhancement.utils import load_audio, save_audio[m
 [m
[31m-RESULTS_DIR = os.path.join(os.path.dirname(__file__), '..', 'results')[m
[32m+[m[32mRESULTS_DIR = os.path.join(os.path.dirname(__file__), "..", "results")[m
 os.makedirs(RESULTS_DIR, exist_ok=True)[m
 [m
[32m+[m
 class SpeechEnhancementGUI:[m
     def __init__(self, root):[m
         self.root = root[m
[36m@@ -24,9 +26,13 @@[m [mclass SpeechEnhancementGUI:[m
     def create_widgets(self):[m
         tk.Label(self.root, text="Noisy Audio File:").pack(pady=5)[m
         input_frame = tk.Frame(self.root)[m
[31m-        input_frame.pack(pady=5, fill='x', padx=10)[m
[31m-        tk.Entry(input_frame, textvariable=self.input_file, width=50).pack(side='left', padx=5)[m
[31m-        tk.Button(input_frame, text="Browse", command=self.browse_file).pack(side='left')[m
[32m+[m[32m        input_frame.pack(pady=5, fill="x", padx=10)[m
[32m+[m[32m        tk.Entry(input_frame, textvariable=self.input_file, width=50).pack([m
[32m+[m[32m            side="left", padx=5[m
[32m+[m[32m        )[m
[32m+[m[32m        tk.Button(input_frame, text="Browse", command=self.browse_file).pack([m
[32m+[m[32m            side="left"[m
[32m+[m[32m        )[m
 [m
         tk.Label(self.root, text="Enhancement Method:").pack(pady=5)[m
         methods = ["specsub", "logmmse", "wiener", "subspace", "gmm_snr"][m
[36m@@ -39,8 +45,7 @@[m [mclass SpeechEnhancementGUI:[m
 [m
     def browse_file(self):[m
         filename = filedialog.askopenfilename([m
[31m-            title="Select noisy WAV file",[m
[31m-            filetypes=[("WAV files", "*.wav")][m
[32m+[m[32m            title="Select noisy WAV file", filetypes=[("WAV files", "*.wav")][m
         )[m
         if filename:[m
             self.input_file.set(filename)[m
[36m@@ -82,10 +87,12 @@[m [mclass SpeechEnhancementGUI:[m
             messagebox.showerror("Error", f"Enhancement failed:\n{str(e)}")[m
             self.status_label.config(text="")[m
 [m
[32m+[m
 def main():[m
     root = tk.Tk()[m
     app = SpeechEnhancementGUI(root)[m
     root.mainloop()[m
 [m
[32m+[m
 if __name__ == "__main__":[m
     main()[m
